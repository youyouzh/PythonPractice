#logging配置文件

#定义logger模块，root是父类，必须存在，其他的自定义
#logging。getLogger(name) 相当于向loggging模块注册了一种日志打印
#如果name为loggers里面keys的值，则调用对应的配置，如果name没有则调用默认（root)的配置
#name 中用点 . 表示继承关系
#可以有多个，以逗号隔开

[loggers]
keys=root,consolelogger,errorlogger


#实现logger对应的配置信息
#            必须是 logger_name  name为loggers中key的值
#level       日志级别，级别有 DEBUG,INFO,WARNING,ERROR,CRITICAL
#handlers    日志处理器，可以有多个 以逗号隔开
#qualname    logger的名称，通过logging.getLogger(name)获取，这里的name便是qualname
#            如果获取的logger 名称不存在，则调用默认（root)logger
#propagate   是否继承符类的配置信息，0：否 1：是

[logger_root]
level=DEBUG
handlers=consoleHandler
qualname=root

#在这里 如果propagate=1,则表示继承父类（root)的配置信息。
#也就是说 既输出到控制台（继承父类的配置）又输出到日志文件
#propagate = 0 表示仅使用自身的配置，仅输出到日志文件
[logger_consolelogger]
level=INFO
handlers=consoleHandler
qualname=consolelogger
propagate=0

[logger_errorlogger]
level=ERROR
handlers=errorHandler,errconsoleHandler
qualname=errorlogger
propagate=0

#定义handlers
[handlers]
keys=consoleHandler,errorHandler,errconsoleHandler


#handlers的具体配置实现
#必须是 handler_name  name为handlers中key的值
#class为logging包里面的handler处理器
#formatter 日志输入格式
#args handler相关参数
[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=simpleFormatter
args=(sys.stdout,)

[handler_errconsoleHandler]
class=StreamHandler
level=ERROR
formatter=simpleFormatter
args=(sys.stderr,)

[handler_errorHandler]
#class=handlers.TimedRotatingFileHandler
#这个地方要写完整的包名
class=books.util.multiprocessloghandler.MultiprocessHandler
level=ERROR
formatter=simpleFormatter
args=('error_log','D',7)
#args=('error_log','M')

#定义日志输出格式
[formatters]
keys=simpleFormatter

#日志输出格式化实现
#datefmt 日期格式 对应asctime
#----------------------------
#日志格式
#----------------------------
# %(asctime)s      年-月-日 时-分-秒，毫秒
# %(filename)s     文件名，不含目录
# %(pathname)s     目录名，完整路径
# %(funcName)s     函数名
# %(levelname)s    级别名
# %(lineno)d       行号
# %(module)s       模块名
# %(message)s      日志信息
# %(name)s         日志模块名
# %(process)d      进程id
# %(processName)s  进程名
# %(thread)d       线程id
# %(threadName)s   线程名
#----------------------------
[formatter_simpleFormatter]
format=%(levelname)s - %(name)s - %(asctime)s - %(module)s.%(funcName)s - %(message)s
datefmt=%Y-%m-%d %H:%M:%S